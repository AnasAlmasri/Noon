/*
 * Copyright 2016 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'com.google.protobuf'
apply plugin: 'com.android.application'


ext {
    supportLibraryVersion = '25.4.0'
    grpcVersion = '1.4.0'
}

android {
    compileSdkVersion 25
    flavorDimensions "default"

    defaultConfig {
        multiDexEnabled true
        applicationId "com.google.cloud.android.speech"
        targetSdkVersion 25
        versionCode 1
        versionName '1.0'

    }

    signingConfigs {
        release {
            storeFile file(project.properties.storeFile)
            storePassword project.properties.storePassword
            keyAlias project.properties.keyAlias
            keyPassword project.properties.keyPassword
        }
    }

    productFlavors {
        dev {
            dimension "default"
            // Minimum version with platform multi-dex support
            minSdkVersion 21
        }
        prod {
            dimension "default"
            // Minimum version that can run gRPC (TLS extension)
            minSdkVersion 16
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            multiDexEnabled true
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.2'
        resolutionStrategy.force "com.android.support:support-annotations:$supportLibraryVersion"
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/INDEX.LIST'
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.3.0'
    }
    plugins {
        javalite {
            artifact = "com.google.protobuf:protoc-gen-javalite:3.0.0"
        }
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                javalite {}
                grpc {
                    // Options added to --grpc_out
                    option 'lite'
                }
            }
        }
    }
}

dependencies {
    implementation 'com.android.support:multidex:1.0.3'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    // UI-related libraries
    implementation 'com.skyfishjy.ripplebackground:library:1.0.1'
    implementation 'com.github.Semantive:waveform-android:v1.2'
    implementation 'com.jjoe64:graphview:4.2.2'
    // Support libraries
    implementation "com.android.support:design:$supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibraryVersion"
    // gRPC
    implementation "io.grpc:grpc-okhttp:$grpcVersion"
    implementation "io.grpc:grpc-protobuf-lite:$grpcVersion"
    implementation "io.grpc:grpc-stub:$grpcVersion"
    implementation 'javax.annotation:javax.annotation-api:1.2'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:support-v4:25.4.0'
    protobuf 'com.google.protobuf:protobuf-java:3.6.1'
    // OAuth2 for Google API
    implementation('com.google.auth:google-auth-library-oauth2-http:0.7.0') {
        exclude module: 'httpclient'
    }
    // Tests
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:0.5'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:2.2.2'
    //implementation 'com.google.cloud:google-cloud-speech:0.79.0-beta'
    // aws polly
    implementation 'com.amazonaws:aws-android-sdk-polly:2.12.0'
    implementation 'com.amazonaws:aws-android-sdk-mobile-client:2.12.0'
    // aws sdks and services
    implementation 'com.amazonaws:aws-android-sdk-core:2.12.0'
    implementation 'com.amazonaws:aws-android-sdk-cognito:2.12.0'
    implementation 'com.amazonaws:aws-android-sdk-s3:2.12.0'
    implementation 'com.amazonaws:aws-android-sdk-ddb:2.12.0'
    implementation 'com.amazonaws:aws-android-sdk-ec2:2.12.0'
    //EventBus
    implementation 'org.greenrobot:eventbus:3.0.0'
    // microsoft azure module
    implementation project(':azure_cognitive')
    implementation 'jsch:jsch:0.1.29'
    implementation files('libs/ganymed-ssh2-build210.jar')
}

configurations.all {
    resolutionStrategy {
        force "com.android.support:support-v4:$supportLibraryVersion"
    }
}

task copySecretKey(type: Copy) {
    def File secretKey = file "$System.env.GOOGLE_APPLICATION_CREDENTIALS"
    from secretKey.getParent()
    include secretKey.getName()
    into 'src/main/res/raw'
    rename secretKey.getName(), "credential.json"
}
preBuild.dependsOn(copySecretKey)
